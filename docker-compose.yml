version: '3'
services:
  backend:
    build: 'backend/docker'
    container_name: static-content-backend
    ports:
      - '8080:8080'
    environment:
      - SPRING.PROFILES.ACTIVE=default
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: content_maker
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d content_maker" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    ports:
      - 5433:5432
    networks:
      - keycloak_demo
  oracle-db:
    image: container-registry.oracle.com/database/enterprise:latest
    environment:
      - ORACLE_SID=ORCLCDB
      - ORACLE_PDB=ORCLPDB1
      - ORACLE_PWD=Oracle_123
    ports:
      - 1521:1521
    volumes:
      - oracle-data:/opt/oracle/oradata
      - oracle-backup:/opt/oracle/backup
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/Oracle_123@//localhost:1521/ORCLCDB as sysdba", "@healthcheck.sql"]
      interval: 30s
      timeout: 10s
      retries: 5


  keycloak:
    image: quay.io/keycloak/keycloak:latest
    build:
      context: ./config
#      dockerfile: ./Dockerfile
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: content_maker
      KC_DB_PASSWORD: password
      KC_DB_USERNAME: admin
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    volumes:
      - type: bind
        source: config/realm-export.json
        target: /opt/keycloak/data/import/realm-export.json
        read_only: true
    ports:
      - 8081:8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak_demo

  frontend:
    build: 'frontend/'
    container_name: static-content-frontend
    ports:
      - '3232:80'
    links:
      - backend

networks:
  keycloak_demo:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  oracle-data:
  oracle-backup: